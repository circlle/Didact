{"version":3,"sources":["../../src/createElement.ts","../../src/fiberMeta.ts","../../src/createDOM.ts","../../src/concurrent.ts","../../src/render.ts","../../src/index.ts","index.js"],"names":["count","rerender","Didact","render","document","getElementById"],"mappings":";;AMAA;;;sMLWA;AIXA,ACEA,IDFA,ACEIA,KAAK,GAAG,CAAZ,MDFA,GAAA,OAAA,CAAA,iBAAA,CAAA;AHCA,ADWA,AGXA,IFAA,ADWI,AGXJ,WAAA,CHWgB,EGXhB,CFAA,ADWiC,GCXjC,CDWA,EACA,AGZA,CAAA,GFAA,CAAA,SEAA,CAAA,OFAA,CAAA;AGAA,ACGA,IDHA,KCGSC,GDHT,GAAA,ECGA,GAAoB,EDHpB,CAAA,UAAA,CAAA;AHEA,ADWA,AGZA,AEGED,EAAAA,EJFI,ADWF,AGZJ,GEGO,ILSI,GCXK,ADWY,CGZ5B,EFCmB,CDWnB,AGZA,OAAA,CFCM,AEDN,UFCmB,CAAC,EEDpB,CFCmB,AEDnB,EFC+B;AAAK,ADYpC,AIZA,IJYI,AIZE,KHA8B,CGAxB,EHA2B,CGAxB,EJYA,ECZ6B,CDYZ,IAAhC,KCZoC,IAAsB,CAAC,OAAO,CAAC,GAAD,CAA9B;AAAmC,ADavE,AIZE,ADDF,AEGEE,CJHF,CGCE,EJYE,AGbJ,SHaa,EIZE,CJYU,AGbzB,CCCe,ACENC,CLUT,CGbA,IEGE,CACE,EFJJ,CAAA,KCCe,CAAA,QDDf,CAAA,ICAe,oBCKT,wCACE,2CAAOH,KAAP,CADF,CADF,EAIE;ADNJ,ACMY,EDNZ,ECMY,IDNN,EAAA,CCMa,EAAEC,KDNf,CAAA;AHDR,ADcO,AIfQ,ADGf,AEKM,CDRN,GHCM,ADcO,AGZP,KFFK,CEEC,EFFE,CEES,GHYE,GAAG,CKXxB,CJHE,AIEJ,CFAI,CEOFG,GJTU,CAAC,CDcF,AGZU,CAAC,EFFV,AISF,CAACC,CJT6B,GEEnB,CFFT,CEEmB,CFFkC,CDcvC,CAAC,KKLzB,CLKwB,AKLA,CFPL,CHYqB,CGZD,GEOvC,CAPF;AJFsE,ADetE,AIXF,ADDE,AEQD,ELIC,IGZM,CCCR,CAAA,CHJwE,EDe7D,EGZI,CHYD,CIXd,CDDyB,ECCV,CHJ0D,CDevE,ECfsE,EAAY,AGIpF;AHJyF,ADgBxF,AGZG,CHUG,GGVH,GAAG,EAAE,EFJgF,IAAI,CAAC,GAAD,AEGpE,CFHgE,KAAc,IAAI,CAAC,GAAD,CAAlB;AAAuB,AEK5G,AEQJJ,GJbwE,CEKpE,IEQI,EFRE,EAAE,IAFa;AFHuF,ADcnG,AGRT,CFNJ,GEMI,GHQS,CAAA,CGRJ,EAAE,IAHc,KHWZ,GAAY,YAAZ;AGPT,IAAA,OAAO,EAAE,IAJY;AFFzB,ADgBO,AGTH,IFPE,ADgBO,AGTT,IAAI,EFPI,AEOF,GFPK,GDgBU,AGdA,GHcG,GChBtB,MAAS,ADgBF,CChBG,IAAD,EAA4B,IAA5B,CDgBa,CChBwC,EDgBxC;AChB6C,ADgB9B,AGRvC,IAAA,KFRqE,ADgB9B,AGRlC,EAAE,OHQgC,CChB+B,GAAD,EAAY;ACLrF,ADK0F,ADgBtC,AGP9C,CHOC,GErBP,ECcM,KFToF,EAAE,CES9E,CDdd,CDK+F,AES/E,CAAC,CDdjB,EDKmG,IAAT,AES1E,CDdhB,ADK0F,CCL1F,aAAA,CAAA;ADKwG,AEQ7F,GFR8D,EEEhD;ADLzB,ADGwG,ADgB3F,AGLT,CFXJ,GCHA,ACcI,GHKS,CAAA,KGLA,EDdb,ACce,GDdf,EFmBa,GAAY,EEnBzB,CAAA,ACce,CAAA,QHKF,IEnBb,CAAA,CCce;AATU,GAAvB;ADHF,ADEA,AFMA,ACUO,AGJL,EAAA,EDdI,ADEA,AFMA,ACUO,OChBA,EEYX,CDdc,ADEA,AEYd,GDdiB,AHQA,CCUQ,EDVU,CCUP,EChBxB,CEYJ,CAAW,CDdP,GHQA,CENU,ADgBH,CChBI,CEYf,EFZc,ECFG,ADES,CCFR,KAAD,AHQkB,CAAC,CGRC,AFkBT,CAAC,EDVM,EAAO,ACUd,EAAmB,GDVZ,EAAY;AENhB,AFMkB,ACWjD,AGHA,EHGA,AGHA,IJRiD,GENlB,GAAG,CAAC,ADiBxB,AGHX,CJRiD,AIQjD,EHGc,CDXmC,EAAA,CCWjD,GCjB+B,CAAe,IAAf,CAAA,AEc/B,CAAgB,OAAhB;AFdmD,ADkBpD,AGFC,CFhBF,ADgBO,CGAL,WAAA,CAAA,YAAA,CAAa,EAAb;ADjBA,ACmBA,EAAA,IDnBI,CAAC,AHO4C,IAAA,CGPjD,CHOiD,CGPrC,EHOqC,GAAA,EAAA,AIY9B,CAAC,EJZ6B,SAAA,CAAA,AIY7B,CAAA,OJZ6B,CIY9B,CJZ8B,AIYjD,IJZ4D;AGL5D,ADCF,AFImD,ACUtC,AGGZ,CAnBD,GFEM,AFI6C,EGL3C,CFeK,CAAA,IDVsC,CEJpC,AFIoC,EGLlC,AHKkC,CEJjC,ECDD,AHKkC,CGLlC,AHKkC,CAAA,CGLlC,CFeJ,CDVsC,CGL/B,CDCd,ADcqB,IEfF,CAAC,EHKyB,CAAA,CEJjC,CAAC,AFIgC,CGLlC,AHKkC,GCUtC,CCdK,ECDc,ADCD,ICDd,IAAe,EAAA,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAe,EAAA,CAAE,GAAhC;ADEA,MAAI,GAAJ;ACAA,AFgBK,AGEE,IHFI,EEhBP,CCkBG,CAAA,GDlBE,CAAC,ECkBH,GAAA,CHFkB,GEhBrB,AFgBwB,EGErB,GDlBiB,IFgBb,OEhBP,IAAmC,CAAC,CAAC,CFgBb,GAAA,CEhBkB,CAAC,GAA/C,EAAoD;AAClD,ADCF,AFEA,ACYgD,IEf9C,EDCE,GFEG,ACYyC,ECdvC,CAAC,CCDC,GDCP,ECDO,EFeqC,CCd7B,CCDjB,IAAA,SAAS,CDCQ,CAAA,GCDR,KAAA,CAAT,GAAS,KAAA,CAAT,EDCF,CCDE,CDCuC,QCD9B,CAAE,WAAX,CAAuB,KAAK,CAAC,GAA7B,CAAA;AACD,ADCC,AFEA,ACWyD,CAAtD,EEhBL,CDGE,AFEA,GEFG,CFEC,CGHC,CDCC,AFEF,GGHK,CHEJ,IGFS,ADCA,CCDC,ADCA,SCDN,KAAoB,ADCvB,CAAwB,KAAK,CAAC,GCD3B,EDCqB,CAAY,CCDC,CAAC,CAAC,KAAK,CAAC,ADC7C,CAAN,ECDK,EAAmD;AACxD,ADCD,AFEC,GEJF,CCCE,AHGA,KEFK,AFEA,EAAA,EGHI,KAAA,CHGJ,CAAA,EGHL,IAAA,EHGK,CAAA,EAAA,EACA,EGJI,GHGJ,CAAA,CGHI,CHIC,IGJD,CAAT,GAAS,KAAA,CAAT,GAAA,SAAS,CAAE,WAAX,CAAuB,KAAK,CAAC,GAA7B,CAAA;AACD,ADCC,AFGE,ACQO,GEdJ,CDGL,EFGE,CEHC,ADWM,CAAA,CEZJ,CDCC,GCDG,CHIC,EAAE,EGJE,ADCA,CCDC,ADCA,GDWN,EDRW,CAAC,ACQE,GEZd,AHIG,CAAa,GEHnB,CCDuB,ADCA,KAAK,CAAC,AFGT,ACQjB,EEZA,EDCH,CAAN,AFGyB,CGJgB,CAAC,AHIX,CGJY,KAAK,CAAC,GAA5C,EAAiD;AACtD,ADCD,AFGK,GEVuB,CCM3B,ADEF,WCFE,AHIW,CGJX,OHIkB,EGJlB,CACE,EHGS,GGHJ,CAAC,EHGoB,CGJ5B,EACW,CAAA,EAAA,EHGA,CGFT,EHEqC,GGFhC,CAAC,CHEG,GAAoC,KGHpC,MACM,IADN,EHGqD,CAAC,CGFhD,EAAA,EHE+C,CAA5D,EGFa,KAAA,CADN,GACM,KAAA,CADN,GACM,EAAA,CAAE,KAFnB,EAGE,KAAK,CAAC,KAHR;AAKD,AHAI,ACOA,IAAM,GDTG,YCSY,GAAG,SAAlB,eAAkB,CAAC,QAAD,EAAuB;ADVxC,ACWZ,EAAA,GDZO,SCYK,GAAG,QAAf;AENA,ADJA,AFJO,ACeR,CAFM,CELL,ADJA,CFJA,QEIS,CCIC,ADJA,CCIC,EDJF,EAAM,CCIC,CAAC,KAAP,CAAV;AACA,ADLiB,AFKlB,CAVD,CGUE,EDLiB,QCKP,ADLe,CCKd,CDLgB,ICKX,CAAC,OAAP,CAAV;AACD,ADNgB,ADSJ,CEtBb,EDaW,EAAwB,EDStB,CAAA,ECT2B,CAAC,KAA9B,CAAT,MDSW,GAAe,eAAf;ACPX,AFgBO,OAAA,CAAA,CEhBA,GAAP,SFgBO,GAAA,aAAA;AGVT,ADLC,AFIY,ACKN,CCrBP,GCiBM,AFIO,GDLA,CAAA,MGCG,GAAG,EFIS,GAAG,IEJzB,EHDO,GAAuB,ACKvB,KEJM,GAAA,MHDN,CCKkB,GAAA;AEH7B,AFGiD,SAAA,YAAA;AEFjD,ADmCO,AFrCT,ACI+D,CAAxD,CEFL,EHFI,GEqCG,CAAA,KCnCP,CAAA,GDmCO,GAAA,CFrCc,GAAG,EGExB,GAAe,ADmCR,IFrCH,GGEJ,CAAuB,UAAvB,GHFwB,CAAC,IAAD,EAAkB;AGI1C,AHHA,MGGM,GHHC,IGGM,GAAG,WAAA,CAAA,UAAA,EAAhB;AACA,ADRF,AFKI,ACES,ICPP,AFKF,EGGE,CAAC,AFDM,CDFL,ACEK,EDFH,GELK,CCQb,EAAc,ADRE,CFKR,CAAA,KCEG,ECPP,CDOsB,QCPV,CAAC,GAAD,AFIT,EEJmC,CDO/B,QCPK,EAAsD,SAAtD,EAAgF;ACShG,ADRA,AFKE,IAAA,EGGE,ADRA,CCQC,ADRA,EFKE,EAAE,GGGG,CAAC,CDRT,ICQJ,ADRkB,CAAC,CCQC,QDRpB,EAA8B,OADkE,CAGhG;ACQA,AHJI,ACCC,EEGL,EFHW,EDDP,MGIM,CAAC,CFHU,CDDR,EAAE,ACCS,GEGN,CHLT,IGKS,CFHP,GEGA,IAAA,GFHa,CAAC,GEGP,CFHM,EAAmB,EEGzB,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,KAAV,CAAV;AACA,ADRA,AFII,ACCJ,EEGA,ADRA,ADKA,IDDI,EEJE,CAAC,ADKA,GAAG,CEGV,ADRA,CCQA,ADRY,AFIA,EAAE,ACCd,OCLA,EACG,GCOH,CAAe,EDRf,CACU,ICOV,GDRA,EAEG,MAFH,CAEU,UAAA,GAAA,EAAG;ACOb,ADPiB,AFAR,ACIV,CAFM,CEKL,SDPiB,ECOjB,ADPmB,CCOnB,EDPsB,IAAI,ICO1B,CAAW,IAAX,ADPiB,KAAuB,KAAK,CAAC,SAAD,EAAY,SAAZ,CAAL,CAA4B,GAA5B,CAAvB;ACQlB,ADRyE,AFFjE,CGDT,EDCE,AFAA,EEGG,OAHH,CAGW,UAAA,IAAA,EAAI;AACX,AFGL,ACHY,CDLb,MCKa,CCAD,ADAC,SCAQ,CDAR,ECAY,CDAF,GCAM,CAAC,MDAjB,KCAY,GAAmB,MAAnB,CAA0B,CAA1B,CAAnB;ACQN,ADPM,ICOF,ADPE,CCOD,EDPI,CAAC,GCOC,CAAC,eDPN,CAAwB,GCO9B,EAAiC,IDP3B,EAAmC,SAAS,CAAC,IAAD,CAA5C;ACQJ,ADPG,AFGmB,ACFjB,EEML,CDbA,CDOW,CCXqF,CAWhG,CFEsB,CGIhB,AHJgB,CGIf,KFNc,GAAG,QDEF,CCFX,EEMX,AHJsB,GGIO,KFNL,GAAA,EEMM,IHJR,IGIO,EAAS;AACpC,AFP0C,IEO1C,KFP0C,GEOlC,CAAC,GFPiC;AEQxC,ADPJ,ADDmD,CAA9C,CCCL,ICOI,EDPE,CAAC,IAAP,CAAY,KCOK,EAAE,EDPnB,EACG,MADH,CACU,OADV,EAEG,KCKgB,CDPnB,CAEU,KAAK,CAAC,SAAD,EAAY,SAAZ,CAFf,EAGG,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","file":"first.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export type ElementType = string\nexport type ElementProps = Record<string, any>\nexport type Element = {\n  type: ElementType\n  props: ElementProps & { children: Element[] }\n}\nexport type PrimaryType = string | number\nexport type CreateElement = (\n  type: string,\n  props: ElementProps | null,\n  ...children: (Element | PrimaryType)[]\n) => Element\nconst createElement: CreateElement = (type, props, ...children) => {\n  return {\n    type,\n    props: {\n      ...props,\n      children: children.map((child) => {\n        return typeof child === 'object' ? child : createTextElement(child)\n      }),\n    },\n  }\n}\n\nexport const TEXT_ELEMENT_LITERAL = \"TEXT_ELEMENT\"\nconst createTextElement = (text: PrimaryType): Element => {\n  return {\n    type: TEXT_ELEMENT_LITERAL,\n    props: {\n      nodeValue: text,\n      children: [],\n    },\n  }\n}\n\nexport { createElement, createTextElement }\n","import type { Element } from './createElement'\n\nexport type Fiber = {\n  parent: Fiber | null\n  child: Fiber | null\n  sibling: Fiber | null\n  dom: HTMLElement | Text | null\n  alternate?: Fiber | null\n  effectTag?: \"UPDATE\" | \"DELETION\" | \"PLACEMENT\"\n} & Element\n\n// next fiber\nlet nextUnitWork: Fiber | null = null\n// root fiber\nlet wipRoot: Fiber | null = null\nlet currentRoot: Fiber | null = null\nlet deletions: Fiber[] = []\n\nexport const setDeletions = (fibers: Fiber[]): void => {\n  deletions = fibers\n}\nexport const getDeletions = (): Fiber[] => deletions\nexport const setCurrentRoot = (root: Fiber | null): void => {\n  currentRoot = root\n}\nexport const getCurrentRoot = (): Fiber | null => currentRoot\nexport const setNextUnitWork = (unitWork: Fiber | null): void => {\n  nextUnitWork = unitWork\n}\nexport const getNextUnitWork = (): Fiber | null => nextUnitWork\nexport const setWipRoot = (root: Fiber | null): void => {\n  wipRoot = root\n}\nexport const getWipRoot = (): Fiber | null => wipRoot","import type { Fiber } from './fiberMeta'\nimport { TEXT_ELEMENT_LITERAL } from './createElement'\n\nconst isProperty = (key: string) => key !== 'children' && !isEvent(key)\nconst isNew = (prev: Record<string, any>, next: Record<string, any>) => (key: string) => prev[key] !== next[key]\nconst isGone = (prev: Record<string, any>, next: Record<string, any>) => (key: string) => !(key in next)\nconst isEvent = (key: string) => key.startsWith(\"on\")\n\nconst createDOM = (fiber: Fiber): HTMLElement | Text => {\n  let dom: HTMLElement | Text\n\n  if (fiber.type === TEXT_ELEMENT_LITERAL) {\n    dom = document.createTextNode(fiber.props.nodeValue)\n  } else {\n    dom = document.createElement(fiber.type)\n  }\n  // todo: create fake prevProps\n  updateDOM(dom, { children: [] }, fiber.props)\n\n  return dom\n}\n\nconst updateDOM = (dom: HTMLElement | Text, prevProps?: Fiber['props'], nextProps?: Fiber['props']): void => {\n  if (!prevProps || !nextProps) return;\n  \n  // remove old or changed event listeners\n  Object.keys(prevProps)\n    .filter(isEvent)\n    .filter(key => !(key in nextProps) || isNew(prevProps, nextProps)(key))\n    .forEach(name => {\n      const eventType  = name.toLowerCase().substr(2)\n      dom.removeEventListener(eventType, prevProps[name])\n    })\n  // add event listeners\n  Object.keys(nextProps)\n    .filter(isEvent)\n    .filter(isNew(prevProps, nextProps))\n    .forEach(name => {\n      const eventType = name\n        .toLowerCase()\n        .substring(2)\n      dom.addEventListener(\n        eventType,\n        nextProps[name]\n      )\n    })\n\n  // remove old properties\n  Object.keys(prevProps)\n    .filter(isProperty)\n    .filter(isGone(prevProps, nextProps))\n    .forEach(name => dom[name] = \"\")\n\n  // set new or changed properties\n  Object.keys(nextProps)\n    .filter(isProperty)\n    .filter(isNew(prevProps, nextProps))\n    .forEach((name) => {\n      dom[name] = nextProps[name]\n    })\n}\n\nexport { createDOM, updateDOM }\n","import { createDOM, updateDOM } from './createDOM'\nimport type { Element } from './createElement'\nimport { Fiber, getDeletions, getNextUnitWork, getWipRoot, setCurrentRoot, setDeletions, setNextUnitWork, setWipRoot } from \"./fiberMeta\"\n\nconst commitWork = (fiber: Fiber | null) => {\n  if (!fiber) return\n\n  const domParent = fiber.parent?.dom\n\n  if (fiber.effectTag === \"PLACEMENT\" && !!fiber.dom) {\n    domParent?.appendChild(fiber.dom as HTMLElement | Text)\n  } else if (fiber.effectTag === \"DELETION\" && !!fiber.dom) {\n    domParent?.removeChild(fiber.dom)\n  } else if (fiber.effectTag === \"UPDATE\" && !!fiber.dom) {\n    updateDOM(\n      fiber.dom,\n      fiber.alternate?.props,\n      fiber.props\n    )\n  }\n\n  commitWork(fiber.child)\n  commitWork(fiber.sibling)\n}\n\nconst commitRoot = () => {\n  // add nodes to dom\n  getDeletions().forEach(commitWork)\n\n  const wipRoot = getWipRoot()\n  if (!wipRoot) return\n  if (!wipRoot.child) return\n\n  commitWork(wipRoot?.child)\n  setCurrentRoot(wipRoot)\n  setWipRoot(null)\n}\n\nif (!window.requestIdleCallback) {\n  window.requestIdleCallback = (callback) => {\n    callback({\n      timeRemaining: () => Infinity,\n      didTimeout: false,\n    })\n    // fake handle\n    return -1\n  }\n}\n\nexport const workLoop = (deadline: IdleDeadline): void => {\n  let shouldYield = false\n  while (getNextUnitWork() && !shouldYield) {\n    const unitWork = getNextUnitWork()\n    if (!unitWork) break\n    setNextUnitWork(performUnitOfWork(unitWork))\n    shouldYield = deadline.timeRemaining() < 1\n  }\n\n\n  if (!getNextUnitWork() && getWipRoot()) {\n    commitRoot()\n    return\n  }\n  requestIdleCallback(workLoop)\n}\n\n// react 内部已经不再使用 requestIdleCallback API， 使用了 scheduler package\n// requestIdleCallback(workLoop)\n\nconst performUnitOfWork = (fiber: Fiber): Fiber | null => {\n  // add dom node\n  if (!fiber.dom) {\n    fiber.dom = createDOM(fiber)\n  }\n\n  // 可能会看到残缺的 ui。 需要去监听 根 fiber,\n  // if (fiber.parent) {\n  //   fiber.parent.dom?.appendChild(fiber.dom)\n  // }\n\n  // create new fibers\n  const elements = fiber.props.children\n  reconcileChildren(fiber, elements)\n\n  // return next unit of work\n\n  if (fiber.child) return fiber.child\n\n  let nextFiber = fiber\n  while (nextFiber) {\n    if (nextFiber.sibling) {\n      return nextFiber.sibling\n    }\n    nextFiber = nextFiber.parent as Fiber\n  }\n\n  return nextFiber\n}\n\nfunction reconcileChildren(wipFiber: Fiber, elements: Element[]) {\n  let index = 0\n  let oldFiber = wipFiber.alternate && wipFiber.alternate.child\n\n  let prevSibling: Fiber | null = null\n\n  while (index < elements.length || !!oldFiber) {\n    const element = elements[index]\n\n    let newFiber: Fiber | null = null\n\n    // compare old fiber to element\n    const sameType = oldFiber && element && oldFiber.type === element.type\n    if (oldFiber && element && oldFiber.type === element.type) {\n      // update the node\n      newFiber = {\n        type: oldFiber.type,\n        props: element.props,\n        dom: oldFiber.dom,\n        parent: wipFiber,\n        alternate: oldFiber,\n        effectTag: \"UPDATE\",\n        child: null,\n        sibling: null\n      }\n    } else {\n      if (element && !sameType) {\n        newFiber = {\n          type: element.type,\n          props: element.props,\n          dom: null,\n          parent: wipFiber,\n          alternate: null,\n          effectTag: \"PLACEMENT\",\n          child: null,\n          sibling: null\n        }\n      }\n      if (oldFiber && !sameType) {\n        // delete the old fiber node\n        oldFiber.effectTag = \"DELETION\"\n        setDeletions([...getDeletions(), oldFiber])\n      }\n    }\n\n\n    if (index === 0) {\n      wipFiber.child = newFiber\n    } else if (element) {\n      prevSibling && (prevSibling.sibling = newFiber)\n    }\n\n    prevSibling = newFiber\n    // set element to next\n    index++\n    // set fiber to next\n    if (oldFiber) {\n      oldFiber = oldFiber.sibling\n    }\n  }\n}\n","import type { Element } from './createElement'\nimport { Fiber, getCurrentRoot, setDeletions } from './fiberMeta'\nimport { setNextUnitWork, setWipRoot } from './fiberMeta'\nimport { workLoop } from './concurrent'\n\nexport type Render = (element: Element, containers: HTMLElement) => void\nconst render: Render = (element, containers) => {\n  const wipRoot: Fiber = {\n    dom: containers,\n    parent: null,\n    child: null,\n    sibling: null,\n    type: 'root',\n    props: {\n      children: [element],\n    },\n    alternate: getCurrentRoot()\n  }\n  setWipRoot(wipRoot)\n\n  setNextUnitWork(wipRoot)\n\n  setDeletions([])\n\n  requestIdleCallback(workLoop)\n}\n\nexport { render }\n","import { createElement } from './createElement'\nimport { render } from './render'\n\nconst Didact = {\n  createElement,\n  render,\n}\n\nexport default Didact\n","import Didact from \"../../src/index\"\n\nlet count = 0\n\nfunction rerender() {\n  count++\n  Didact.render(\n    <div>\n      <p>\n        <span>{count}</span>\n      </p>\n      <button onClick={rerender}>增加</button>\n    </div>,\n    document.getElementById(\"root\")\n  )\n}\n\nrerender()\n\n"]}